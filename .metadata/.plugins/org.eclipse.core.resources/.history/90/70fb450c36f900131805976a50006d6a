package com.example.fw;

import java.util.ArrayList;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;

import com.example.tests.GroupData;
import java.util.Arrays;

public class GroupHelper extends HelperBase{
	
	private List<GroupData> cachedGroups;
	
	public GroupHelper(ApplicationManager manager) {
		super(manager);
	}
	
	public List<GroupData> getGroups() {
		if (cachedGroups == null)
		{
			rebuildCache();
		}
		return cachedGroups;
		
	}
	
	public GroupHelper rebuildCache() {
		
		cachedGroups = new ArrayList<GroupData>();
		manager.navigateTo().groupsPage();
		List<WebElement> checkboxes = driver.findElements(By.name("selected[]"));
		for (WebElement checkbox : checkboxes) {
			String title = checkbox.getAttribute("title");
			String name = title.substring("Select (".length(), title.length() - ")".length());
			cachedGroups.add(new GroupData().withName(name));		
		}		
		return this;
	}
	
	public GroupHelper createGroup(GroupData myGroupData) {
		manager.navigateTo().groupsPage();
		initGroupCreation();
	    fillGroupData(myGroupData);
	    submitGroupCreation();
	    returnToGroupPage();
	    rebuildCache();	
		return this;
	}

	public GroupHelper modifyGroup(GroupData groupData, int index) {
		manager.navigateTo().groupsPage();
		selectGroup(index);
	    initEditGroup();
	    fillGroupData(groupData);
	    updateGroup();
	    returnToGroupPage();
	    rebuildCache();
		return this;
	}

	//...............................

	public GroupHelper returnToGroupPage() {
		click(By.linkText("group page"));
		return this;
	}

	public GroupHelper fillGroupData(GroupData groupData) {
	    type(By.name("group_name"), groupData.getName());
	    type(By.name("group_header"),groupData.getHeader());
	    type(By.name("group_footer"), groupData.getFooter());
		return this;
	}

	public GroupHelper initGroupCreation() {
		click(By.name("new"));
		return this;
	}

	public GroupHelper submitGroupCreation() {
		click(By.name("submit"));
		return this;
	}

	public GroupHelper confirmGroupDeletion() {
		click(By.name("delete"));
		return this;
		
	}

	public GroupHelper selectGroup(int[] index) {
		for (int j = 0; j < index.length; j++) {
			if (index[j] >= 0 && !isIndexTheSame(index, j)){
				int i = index[j] + 1;
				click(By.xpath("//input[@name='selected[]']["+ i +"]"));
			}
		}
		return this;
	}

	public GroupHelper initEditGroup() {
		click(By.name("edit"));
		return this;
			
	}

	public GroupHelper updateGroup() {
		click(By.name("update"));
		return this;
		
	}

	public <T> int[] generateFewIndexes(List<T> list){
		int quantity = generateRandomQuantity(list);
	    int[] index = new int[quantity];
	    for (int i = 0; i< quantity; i++){
	    	do
	    	index[i] = generateRandomIndex(list);
	    	while (isIndexTheSame(index, i));
	    }
	    return index;
	}	
	

}
